namespace EntityBuffer;

struct Vec2 {
  x:float;
  y:float;
}

enum BodyType : byte { Mob=0, Transparent, Ledge, Solid }

enum Color : byte { Yellow=0, Red, Green, Blue, Black, White }

enum AnimType : byte { Idle=0, Walk, Attack, Fall }

union Component { Transform, Dynamic, KeyState, Player, Outline, Animation }

table Transform {
  x:int;
  y:int;
  width:int;
  height:int;
}

table Dynamic {
  width:float;
  height:float;
  falling:bool;
  pos:Vec2;
  prev_pos:Vec2;
  vel:Vec2;
  accel:Vec2;
  type:BodyType;
}

table KeyState {
  bitset:uint64;
}

table Player {
  id:int;
  username:string;
}

table Outline {
  color:Color;
  width:int;
}

table Animation {
  type:AnimType;
}

// Entity ID and vector of Components to update 
table Entity {
  id:int;
  component:[Component];  // Vector of Unions
}

root_type Entity;